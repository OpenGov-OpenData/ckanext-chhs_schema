name: Tests
on: [pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install requirements
        run: pip install flake8 pycodestyle
      - name: Check syntax
        run: flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics --exclude ckan

  test:
    needs: lint
    strategy:
      matrix:
        ckan-version: [2.9]
      fail-fast: false

    name: CKAN ${{ matrix.ckan-version }}
    runs-on: ubuntu-latest
    container:
      image: openknowledge/ckan-dev:${{ matrix.ckan-version }}
    services:
      solr:
        image: ckan/ckan-solr:${{ matrix.ckan-version }}
      postgres:
        image: ckan/ckan-postgres-dev:${{ matrix.ckan-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
          image: redis:3
    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
    - uses: actions/checkout@v2
    - name: Install requirements (Python 3)
      if: ${{ matrix.ckan-version != '2.7' && matrix.ckan-version != '2.8' && matrix.ckan-version != '2.9-py2'}}
      run: |
        # Install ckanext-scheming
        git clone https://github.com/ckan/ckanext-scheming
        pip install -e ckanext-scheming
        pip install -r ckanext-scheming/test-requirements.txt
    - name: Install requirements (common)
      run: |
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
        pip install -e .
        # Replace default path to CKAN core config file with the one on the container
        sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini
    - name: Setup extension (CKAN >= 2.9)
      if: ${{ matrix.ckan-version != '2.7' && matrix.ckan-version != '2.8' }}
      run: |
        ckan -c test.ini db init
    - name: Run tests
      run: pytest --ckan-ini=test.ini --cov=ckanext.chhs_schema --cov-report xml:coverage.xml --disable-warnings ckanext/chhs_schema/tests
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
        args: >
          -Dsonar.projectKey=ckanext-chhs_schema
          -Dsonar.sources=ckanext/chhs_schema
          -Dsonar.tests=ckanext/chhs_schema/tests
          -Dsonar.exclusions=ckanext/chhs_schema/tests/**
          -Dsonar.python.coverage.reportPaths=coverage.xml
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_API_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_EXTERNAL_URL }}
